#!/usr/bin/env python

import rospy
from std_msgs.msg import String
#Import everything in the control module, 
#including functions, classes, variables, and more.
from Led import *
from Control import *
from Ultrasonic import *
#Creating object 'control' of 'Control' class.
c=Control()
u= Ultrasonic()
l=Led()
#example:
#data=['CMD_MOVE', '1', '0', '25', '10', '0']
#Move command:'CMD_MOVE'
#Gait Mode: "1"
#Moving direction: x='0',y='25'
#Delay:'10'
#Action Mode : '0'   Angleless turn 
#print(u.getDistance())


#t1 sudo chmod a+rw /dev/gpiomem /   roscore
#t2 source devel/setup.sh / rosrun novo_ros driver_node
#t3 rostopic pub -1 /command std_msgs/String "forwards"

def Forwards():
    #Move forward in action mode 1 and gait mode 1
    for i in range(3):
        data=['CMD_MOVE', '1', '0', '35', '10', '0']
        c.run(data)

def Right():
    #Move right in action mode 1 and gait mode 1
    for i in range(3):
        data=['CMD_MOVE', '1', '35', '0', '10', '0']
        c.run(data)
def Backwards():
    #Move backward in action mode 2 and gait mode 2    
    for i in range(3):
        data=['CMD_MOVE', '1', '0', '-35', '10', '0']
        c.run(data)

def Left():
    #Move left in action mode 1 and gait mode 1    
    for i in range(3):
        data=['CMD_MOVE', '1', '-35', '0', '10', '10']
        c.run(data)
def Led():
    l.colorWipe(l.strip, Color(255, 0, 0)) 
    time.sleep(1)
    l.colorWipe(l.strip,Color(0, 0, 0), 50); 

def StopMotors():
    c.relax(True)

# Message Handler

def CommandCallback(commandMessage):
    command = commandMessage.data
    if command == 'forwards':
        print("Moving forwards")
        Forwards()
    elif command == 'backwards':
        print("Moving backwards")
        Backwards()
    elif command == 'left':
        print("Turning left")
        Left()
    elif command == 'right':
        print("Turning right")
        Right()
    elif command == 'stop':
        print("Stopping")
        StopMotors()
    elif command == 'led':
        print("Stopping")
        Led()
    else:
        print("Unknown command, stopping instead")
        StopMotors()        

rospy.init_node('driver')

rospy.Subscriber('command', String, CommandCallback)

rospy.spin()

print("Stop")
StopMotors()
#GPIO.cleanup()
